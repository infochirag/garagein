var orgin;
var getAddressList;
var makeLogin;
var checkoutData;
var saveLoginAddress;
var scope;
app.controller('myCtrl', function($scope,$http,$timeout) {
	$scope.pageHeading="Select service station";
	$scope.pageSubHeading="Choose a service station nearest to your location";
	$scope.ServiceDate;
	$scope.prevChoosedCity=0;
	$scope.pickUp=0;
	$scope.ServiceTime=[];
	$scope.bookingData;
	$scope.geoLocationOn=0;
	$scope.ValidatePickUp=0;
	$scope.loggedIn=loggedIn;
	$scope.bookedData=[];
	$scope.bookedData.date="";
	$scope.ServiceTimeDefault=[{time:'07 AM - 09 AM',b_time:'07:00:00'},{time:'09 AM - 11 AM',b_time:'09:00:00'},{time:'11 AM - 01 PM',b_time:'11:00:00'},{time:'01 PM - 03 PM',b_time:'13:00:00'},{time:'03 PM - 05 PM',b_time:'15:00:00'},{time:'05 PM - 07 PM',b_time:'17:00:00'},{time:'07 PM - 09 PM',b_time:'19:00:00'},{time:'09 PM - 11 PM',b_time:'21:00:00'},{time:'11 PM - 12 PM',b_time:'23:00:00'}];
	$scope.ServiceTime.timeArr=[];
	$scope.ServiceTime.selectedTime="Choose Time";
	$scope.choosedStation="Select service station";
	$scope.stationContainerClass="";
	$scope.owlCarouselClass="";
	$scope.dateTimeContainerClass="hidden";
	$scope.stationListByCity=[];
	$scope.stationListDistanceByCity=[];
	$scope.changeCity =function(id){
		$scope.getStationList($scope.choosedCity);
	}
	$scope.chooseStation =function(){
		$scope.pageHeading="Select service station";
		$scope.pageSubHeading="Choose a service station nearest to your location";
		$scope.stationContainerClass="";
		$scope.dateTimeContainerClass="hidden";
	}
	$scope.callCarousel =function(obj){
		SEMICOLON.widget.carousel();
		$scope.dateTimeContainerClass="";
	}
 	$scope.saveCheckOut =function(dName,dValue){
		var arr=[];
		arr[dName]=dValue;
		$scope.passCheckOut(arr);
	}
	$scope.passCheckOut =function(dataArr){//
		var data = {booking_data:dataArr};
		var config = {
			params: dataArr,
			headers : {'Accept' : 'application/json'}
		};
		$http.get(checkout_save, config).then(function(response) {
		},function(err) {
		});
	}
	$scope.chooseDate =function(obj){
		
		$scope.ValidatePickUp=0;
		$scope.ServiceTime.selectedTime="Choose Time";
		$scope.bookedData.time="";
		$scope.pageHeading="Select Date";
		$scope.pageSubHeading="Choose a Day at Your Convenience";
		//$scope.bookedData.station=obj.id;
		$scope.bookedData.station=394;
		//$scope.stationServiceDay=obj.service_day.split(",");
		$scope.stationServiceDay='1,2,3,4,5,6,7';
		//$scope.choosedStation=obj.shop_name;
		$scope.choosedStation='rest';
		$scope.stationContainerClass="hidden";
		$scope.dateTimeContainerClass="";
		console.log(obj.sDate);
		$scope.ServiceDate.selectedDate=obj.sDate;
		$scope.bookedData.date=obj.bDate;
		$scope.ServiceTime.timeArr=[];
		angular.forEach($scope.ServiceTimeDefault, function(value, key) {
			value.status=1;
			if('09:00:00'<=value.b_time && '17:00:00'>=value.b_time){
				if($scope.bookedData.date==currentDate && value.b_time < currentTime)
					value.status=0;
				$scope.ServiceTime.timeArr.push(value);
			}
		});
		delete(checkoutData.station);
		if(typeof(checkoutData.dates)!='undefined'){
			$scope.chooseTime(checkoutData.dates);
		}
		else if(typeof(checkoutData.date)=='undefined'){
			var saveCheckOutArr=[];
			saveCheckOutArr['station']=obj.id;
			saveCheckOutArr['choosedCity']=$scope.choosedCity;
			saveCheckOutArr['date']=obj.bDate;
			$scope.passCheckOut(saveCheckOutArr);
		}
	}
	$scope.chooseTime =function(obj){
		$scope.ServiceTime.selectedTime="Choose Time";
		$scope.bookedData.time="";
		$scope.pageHeading="Select Time";
		$scope.pageSubHeading="Choose a time slot for your car";
		var daysArr=[];
		daysArr["1"]="Sun";
		daysArr["2"]="Mon";
		daysArr["3"]="Tue";
		daysArr["4"]="Wed";
		daysArr["5"]="Thu";
		daysArr["6"]="Fri";
		daysArr["7"]="Sat";
		delete(checkoutData.dates);
		//var clickedDay=(daysArr.indexOf(obj.day)).toString();
		//if($scope.stationServiceDay.indexOf(clickedDay)>-1){
			$scope.bookedData.date=obj.b_date;
			$scope.saveCheckOut('date',obj.b_date);
			$scope.ServiceDate.month=obj.month;
			$scope.ServiceDate.selectedDate=obj.date+" "+obj.month+" "+obj.year;
			angular.forEach($scope.ServiceTimeDefault, function(value, key){
				if(typeof(checkoutData.time)!='undefined'){
					if(checkoutData.time==value.b_time){
						$scope.chooseSlot(value);
						delete(checkoutData.time);
					}
				}
				$scope.ServiceTimeDefault[key].status=1;
				if($scope.bookedData.date==currentDate && value.b_time < currentTime)
					$scope.ServiceTimeDefault[key].status=0;
			});
		/*}else{
			$('#station_closed_id').show();
			setInterval(function(){
				$('#station_closed_id').fadeOut(1000);
			}, 3000);
				
		}*/
		
	}
	$scope.chooseSlot =function(obj){
		if($scope.bookingData.pickUp==1){
			if(obj.b_time>="14:00:00"){
				$('#pickup_closed_id').show();
				setInterval(function(){
					$('#pickup_closed_id').fadeOut(1000);
				}, 3000);
				$scope.ValidatePickUp=0;
				$scope.pickup=0;
				pickUpOnOff(angular.element('[ng-model="pickup"]'));
			}else
			$scope.ValidatePickUp=1;
		}
		$scope.bookedData.time=obj.b_time;
		$scope.saveCheckOut('time',obj.b_time);
		$scope.ServiceTime.selectedTime=obj.time;
	}
	var displayKm=function(id){
		for(var i=0;i<$scope.stationListDistanceByCity[id].length;i++){
			$('#ssDist_'+i).html($scope.stationListDistanceByCity[id][i]);
		}
	}
	$scope.getStationDistance =function(id){
		if(!$scope.stationListDistanceByCity[id]){
			var stnDistCalc=function(response,status){
				$scope.stationListDistanceByCity[id]=[];
				if(response['rows'].length>0){
				for(var i=0;i<response['rows'][0]['elements'].length;i++){
					if(response['rows'][0]['elements'][i]['status']=='OK'){
						$scope.stationListByCity[id][i]["distance"]=response['rows'][0]['elements'][i]['distance']['text'];
						$scope.stationListDistanceByCity[id][i]=response['rows'][0]['elements'][i]['distance']['text'];
					}
				}
				displayKm(id);
				}
			}
			var orginArr=[orgin];var destArr=[];
			for (var i = 0; i < $scope.stationListByCity[id].length; i++){
				destArr[i]=new google.maps.LatLng($scope.stationListByCity[id][i]["latitude"],$scope.stationListByCity[id][i]["longitude"]);
			}
			$scope.calculateDist(orginArr,destArr,stnDistCalc);
		}else{
			displayKm(id);
		}
	}
	$scope.getRedeemAmount=function(){
		if(referEarnStart==1 && reddemYes){
			var jsonData={};
			jsonData["transaction_value"]=$scope.bookingData.amount;
			jsonData["products"]={'sku':{}};
			
			angular.forEach($scope.bookingData.package, function(value, key) {
				var product=$scope.bookingData.modelId.toString()+value.id.toString();
				jsonData["products"]["sku"][product]={"quantity" : 1};
			})
			var config={
				method: 'POST',
				url: reValidatePointsUrl,
				headers: {
					'Authorization': $scope.getREAuth()
				},
				data:jsonData
			};
			$http(config).then(function successCallback(response) {
				console.log(response.data);
				$scope.reddemablePoint=response.data.allowed_redeemable_points;
			});
		}else
			$scope.reddemablePoint=0;
	};
	$scope.getREAuth=function(){
		var username='72ec18ca-e77c-47f9-b35d-941cc807e592';
		var password='5183b5cf51143269333da242523701ff';
		return 'Basic ' + btoa(username + ":" + password)
	};
	$scope.getStationList =function(id){
		if(!$scope.stationListByCity[id]){
			$http.get(ssUrl+"?id="+id).then(function(response) {
				var responsData=response.data;
				$scope.map=[];$scope.marker=[];$scope.myLatlng=[];$scope.dist=[];
				$scope.serviceStation =responsData.data;
				$scope.stationListByCity[id]=responsData.data;
				//code for check already choosed data
				if(typeof(checkoutData.choosedCity)!='undefined' && typeof(checkoutData.station)!='undefined'){
					if(typeof($scope.stationListByCity[$scope.choosedCity])!='undefined'){
						var station_id=parseInt(checkoutData.station);
						
						var stationList=$scope.stationListByCity[$scope.choosedCity];
						if(stationList.length>0)
						for(var i=0;i<=stationList.length-1;i++){
							if(station_id==stationList[i].id){
								$scope.chooseDate(stationList[i]);
							}
						}
						
					}
					
				}
				//$scope.getStationDistance(id);
			});
		}else{
			$scope.serviceStation =$scope.stationListByCity[id];
			//$scope.getStationDistance(id);
		}
	}
	var list = [];
	getAddressList=function(id){
		if($scope.loggedIn==1){
		$http.get(addressUrl).then(function(response) {
			$scope.addressData = response.data.data;
			if(typeof(id)!='undefined' && id!=''){
				var scrollPos =  $("#pick_up_content").offset().top;
				$(window).scrollTop(scrollPos);
				$scope.bookedData.address = id;
			}
		});
		}
	}
	makeLogin=function(){
		console.log(dorefresh);
		$('#myModal').modal("hide");
		if($scope.pickup==1 && checkoutsubmit==1){
			var addr_type=$("input[name='addr_type']:checked").val();
			var address=$('#address').val();
			var area=$('#area').val();
			if(address!='' && area!=''){
				var land_mark=$('#land_mark').val();
				var dataToPass="locality="+address+"&addr_type="+addr_type+"&area="+area+"&land_mark="+land_mark;
				$.ajax({
					type: "get",
					url: addAddressUrl,
					cache: false,
					data: dataToPass,
					success: function(data) {
						if(data.status==1){
							$scope.loggedIn=1;
							loggedIn=1;
							$scope.bookedData.address = data.data.id;
							$('.pickUpOnOff').attr('data-validation','required');
							$('#b_address_id').val(data.data.id);
							$("#submit-button").click();
						}
					}
				});
			}else{
				$scope.loggedIn=1;
				loggedIn=1;
				getAddressList();
				$("#submit-button" ).click();
			}
		}else if(dorefresh==1){
			location.reload();
		}else{
			$scope.loggedIn=1;
			loggedIn=1;
			getAddressList();
			if(checkoutsubmit==1)
				$( "#submit-button" ).click();
		}
		
	}
	$http.get(bookingUrl).then(function(response) {
		$scope.bookedData.station=394;
		$scope.bookedData.time="";
		$scope.bookingData = response.data.data;
		if($scope.bookingData.pickUp==1){
			getAddressList();
		}
		$scope.doCheckOut();
		$scope.getRedeemAmount();
	});
	saveLoginAddress = $scope.saveLoginAddress =function(){
		if($scope.pickup==1 && checkoutsubmit==1){
			var arr=[];
			arr["addr_type"]=$("input[name='addr_type']:checked").val();
			arr["address_val"]=$('#address').val();
			arr["area"]=$('#area').val();
			arr["land_mark"]=$('#land_mark').val();
			if(arr["address_val"]!='' && arr["area"]!=''){
				$scope.passCheckOut(arr);
			}
			return true;
		}else
			return true;
	}
	$http.get(bookingDateUrl).then(function(response) {
		$scope.ServiceDate=response.data.data;
		$scope.owlCarouselClass="carousel-widget";
		$scope.ServiceDate.selectedDate="Choose Date";
		//$scope.bookedData.date=$scope.ServiceDate.b_date;
			
	});
	$scope.calculateDist =function(orgin_arr,dest_arr,callBack){
		if(typeof(orgin)!='undefined'){
		var service = new google.maps.DistanceMatrixService();
		service.getDistanceMatrix(
		{
			origins: orgin_arr,
			destinations: dest_arr,
			travelMode: 'DRIVING',
			avoidHighways: false,
			avoidTolls: false,
		},callBack);
		}
	}
	$scope.doCheckOut =function(){
		$http.get(checkout_get).then(function(response){
			if(response.data.status==1){
				checkoutData=response.data.data;
				if(typeof(checkoutData.address_id)!='undefined'){
					$scope.bookedData.address=parseInt(checkoutData.address_id);
				}
				/*if(typeof(checkoutData.choosedCity)!='undefined'){
					$scope.choosedCity=$scope.prevChoosedCity=parseInt(checkoutData.choosedCity);
					//$scope.getStationList($scope.choosedCity);
				}*/
				if(typeof(checkoutData.defaultDate)!='undefined'){
					//$scope.choosedCity=$scope.prevChoosedCity=parseInt(checkoutData.choosedCity);
					
					$scope.chooseDate(checkoutData.defaultDate);
					//$scope.getStationList($scope.choosedCity);
				}
				if(typeof(checkoutData.pickup)!='undefined'){
					$scope.pickup=JSON.parse(checkoutData.pickup);
					if($scope.pickup)
						$('.pickUpOnOff').attr('data-validation','required');
				}
				
				if(submitBooking==1){
					$timeout(function () {
						$( "#submit-button" ).click();
					}, 500);
				}
			}
		});
	}
	/*$http.get(cityUrl).then(function(response) {
		$scope.cityData=response.data.data;
		if(!$scope.prevChoosedCity)
			$scope.choosedCity=$scope.cityData[0]["id"];
		$scope.getStationList($scope.choosedCity);
		var cityIdArr=[];
		$scope.cityDistCalc=function(response,status){
			bindDataToForm(response.originAddresses[0]);
			var resultArr=[];
			for(var i=0;i<response['rows'][0]['elements'].length;i++){
				if(response['rows'][0]['elements'][i]['status']=='OK')
					resultArr[i]=response['rows'][0]['elements'][i]['distance']["value"];
				else
					resultArr[i]=99999999;
			}
			var minDist=Math.min.apply(null, resultArr);
			if(!$scope.choosedCity){
				$scope.choosedCity=cityIdArr[resultArr.indexOf(minDist)];
				$scope.getStationList($scope.choosedCity);
			}
		}
		if(navigator.geolocation) {
			navigator.geolocation.getCurrentPosition(function(position) {
				$scope.geoLocationOn=1;
				orgin=new google.maps.LatLng(position.coords.latitude,position.coords.longitude);
				var orginArr=[orgin];var destArr=[];
				for (var i = 0; i < $scope.cityData.length; i++){
					destArr[i]=new google.maps.LatLng($scope.cityData[i]["latitude"],$scope.cityData[i]["longitude"]);
					cityIdArr[i]=$scope.cityData[i]["id"];
				}
				$scope.calculateDist(orginArr,destArr,$scope.cityDistCalc);
			}, function() {
				$scope.getStationList($scope.choosedCity);
			});
		}else{
			$scope.getStationList($scope.choosedCity);
		}
		
	});
	*/
	scope=$scope;
});
var init=0;
function addAddressfn() {
	if(init==0){
		init=1;
		var latlng = orgin;
		var map = new google.maps.Map(document.getElementById('add_adrs_map'), {
		  center: latlng,
		  zoom: 13
		});
		var marker = new google.maps.Marker({
		  map: map,
		  position: latlng,
		  draggable: true,
		  //anchorPoint: new google.maps.Point(0, -29)
		});
		var contentString = '<b>Drag and drop to change the Address </b>';      
		var infowindow = new google.maps.InfoWindow({
			content: contentString
		});
		infowindow.open(map, marker);
		var geocoder = new google.maps.Geocoder();
   /* var input = document.getElementById('searchInput');
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
   
	
    var autocomplete = new google.maps.places.Autocomplete(input);
    autocomplete.bindTo('bounds', map);
    autocomplete.addListener('place_changed', function() {
	marker.setVisible(false);
	var place = autocomplete.getPlace();
	if (!place.geometry) {
		window.alert("Autocomplete's returned place contains no geometry");
		return;
	}
	// If the place has a geometry, then present it on a map.
	if (place.geometry.viewport) {
		map.fitBounds(place.geometry.viewport);
	} else {
		map.setCenter(place.geometry.location);
		map.setZoom(17);
	}
	marker.setPosition(place.geometry.location);
	marker.setVisible(true);          
	bindDataToForm(place.formatted_address,place.geometry.location.lat(),place.geometry.location.lng());
    });*/
    // this function will work on marker move event into map 
    google.maps.event.addListener(marker, 'dragend', function() {
        geocoder.geocode({'latLng': marker.getPosition()}, function(results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
          if (results[0]) {        
              bindDataToForm(results[0].formatted_address,marker.getPosition().lat(),marker.getPosition().lng());
              //infowindow.setContent(results[0].formatted_address);
              //infowindow.open(map, marker);
          }
        }
        });
    });
	
	}
	
}
function pickUpOnOff(obj){
	if(obj.checked){
		$('.pickUpOnOff').attr('data-validation','required');
	}else{
		$('.pickUpOnOff').attr('data-validation','');
	}
}
function bindDataToForm(addressText){
	var address=addressText.split(',');
   if(address.length>2){
		if(document.getElementById('address')){
		document.getElementById('address').value=address[0]+","+address[1];
		document.getElementById('area').value=address[2];
		}
	}else{
		if(document.getElementById('address')){
		document.getElementById('address').value=address[0];
		document.getElementById('area').value=address[1];
		}
	}
}
function closepopup(){
    $.magnificPopup.close();
};
$.validate({
    form : '#form-add-address',
	scrollToTopOnError : false,
    onSuccess : function($form) {
	var addr_type=$("input[name='addr_type']:checked").val();
	var address=$('#address').val();
	var area=$('#area').val();
	var land_mark=$('#land_mark').val();
	var dataToPass="locality="+address+"&addr_type="+addr_type+"&area="+area+"&land_mark="+land_mark;
	$.ajax({
        type: "get",
        url: addAddressUrl,
        cache: false,
        data: dataToPass,
        success: function(data) {
			if(data.status==1){
				closepopup();
				getAddressList(data.data.id);
			}else if(data.status==0){
				$form.prepend('<div class="alert warning alert-danger alert-dismissable"><button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>'+data.msg+'</div>');
			}
        }
	});
    return false; // Will stop the submission of the form
    }
});
$.validate({
    form : '#booking_checkout',
	scrollToTopOnError : false,
	validateHiddenInputs : true,
    onSuccess : function($form) {
		
		
		if(loggedIn==0){
			var checkoutsubmit=1;
			openLoginModal();
			$('#myModal').modal('show');
			return false; // Will stop the submission of the form
		}else{
			var packName=Array();
			scope.bookingData.package.forEach(function(element) {
			  packName.push(element.name);
			});
			Moengage.track_event("CheckOut",{
				"time": scope.bookedData.time, 
				"date": scope.bookedData.date, 
				"product_name": packName.toString(), 
				"price": scope.bookingData.amount,
				"model_name": scope.bookingData.model_name,
				"Platform ": "web",                     
			});
			return true;
		}
    }
});
